#Ken
I list a few directions that I would like to work on and maybe you or Renato can add some more on.

  * Check, refine, or add new relational algebra operations in MTDBMS (MTCalc)
  * Work on Apache Calcite and see the possible to add SQL extension module and prototype MT sharing
  * Read some paper of related works and think some new ideas

#Lucas
Please remember to add all relevant things to the SVN because this is very useful to us as a documentation. Some short comments:
 
  * Refining the operators sounds good. I just realized that we are also missing a clear overview of all the operators. So if you could do that, that would clearly be a good point to start with.
  * Good! Go ahead! :-)
  * Yes, related work is always important. If possible, we should build on top of it instead of repeating what has already been done. Could you also put together a list of related work in a text-file (or even bib-file)? This will be very helpful once we'd like to write the paper.

#Renato
On the list of tasks that you pointed out, I totally agree with you because we need to understand what the operations are and how they are supposed to work (task 1), then try to prototype it (task 2), and when you are needing some "inspiration" you can look for related papers (task 3).
About the slides of data cubes for MT, they "somehow" show an idea I had for representing (and then storing) multi-tenancy data by modelling them as an OLAP database. In this way, we could shape global shared tables as dimension tables, and non(partially)-shared tables as facts tables. This could help us designing a "better" (not proven yet) storage layout for MT-Databases by creating data cubes on these shared tables. Anyways, it is an idea that we could discuss further along the project. You have plenty of things to do for now ;)
